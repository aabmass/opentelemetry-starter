# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from foodfinder.supplier import supplier_pb2 as foodfinder_dot_supplier_dot_supplier__pb2


class SupplierStub(object):
    """*
    Service for searching for vendors of a given ingredient. Returns a list of
    all vendors that supply the ingredient.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.searchVendors = channel.unary_unary(
                '/foodfinder.supplier.Supplier/searchVendors',
                request_serializer=foodfinder_dot_supplier_dot_supplier__pb2.SearchVendorsRequest.SerializeToString,
                response_deserializer=foodfinder_dot_supplier_dot_supplier__pb2.SearchVendorsResponse.FromString,
                )


class SupplierServicer(object):
    """*
    Service for searching for vendors of a given ingredient. Returns a list of
    all vendors that supply the ingredient.
    """

    def searchVendors(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SupplierServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'searchVendors': grpc.unary_unary_rpc_method_handler(
                    servicer.searchVendors,
                    request_deserializer=foodfinder_dot_supplier_dot_supplier__pb2.SearchVendorsRequest.FromString,
                    response_serializer=foodfinder_dot_supplier_dot_supplier__pb2.SearchVendorsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'foodfinder.supplier.Supplier', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Supplier(object):
    """*
    Service for searching for vendors of a given ingredient. Returns a list of
    all vendors that supply the ingredient.
    """

    @staticmethod
    def searchVendors(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/foodfinder.supplier.Supplier/searchVendors',
            foodfinder_dot_supplier_dot_supplier__pb2.SearchVendorsRequest.SerializeToString,
            foodfinder_dot_supplier_dot_supplier__pb2.SearchVendorsResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
